---
title: MED4 dynamic flux balance model with AMGs
format: html
jupyter: python3
---

```{python}
import os
import math
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os
import sys
import warnings
warnings.filterwarnings('ignore')
import re
from pathlib import Path
import scipy as sp
import cobra

from cobra.io import read_sbml_model, write_sbml_model, validate_sbml_model
```

```{python}
old_model_file = './Model_files/archive/iSO595v6.xml'
ori_model_file = './Model_files/iSO595v7.xml'
v1_model_file = './Model_files/ProchlorococcusMED4v1.xml' 
model = read_sbml_model(ori_model_file)
model.name = 'Prochlorococcus MED4'
# print(len(model.reactions))
# print(len(model.metabolites))
# print(len(model.genes))
model.id = 'ProchlorococcusMED4'
# write_sbml_model(model, v1_model_file)
model
```

```{python}
model.summary()
```

```{python}
model.solver
```

```{python}
# model.solver = 'cplex'
# model.solver
```

## Using COBRApy rather than COMETS

However, the COMETS are dependent on GUROBI which is not free to use. Therefore, we will use the cobrapy package to run the COMETS model. cobrapy is a python package that allows the user to run cobra models without the need for a GUROBI license. 

```{python}
solution = model.optimize()
print(solution)
```

```{python}
model.summary()
```

```{python}
from cobra.flux_analysis import production_envelope
```

```{python}
prod_env = production_envelope(model, ["HCO3EXcar", "LightEX"])
prod_env.head()
```

```{python}
prod_env = production_envelope(
    model, ["LightEX"], objective="R02026", carbon_sources="HCO3EXcar")
prod_env
```

```{python}
%matplotlib inline
prod_env.plot(
    kind='line', x='LightEX', y='carbon_yield_maximum');
```

```{python}
model.metabolites.get_by_id("Acetate[c]").reactions
```

```{python}
model.reactions.get_by_id("LightEX").lower_bound = -1000
```


